name: Continuous Integration

on: [push]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      # POETRY:START #
      # This installs poetry using pip instead of the poetry recommended install script for two reasons:
      # 1. It's cross platform
      # 2. The normal installation wasn't registering the `poetry` executable in the shell in later commands (for reasons unknown)
      # 3. This repo's pre-commit config expects poetry to be available as "python -m poetry"
      - name: Install poetry
        run: python -m pip install --upgrade pip poetry
      # Install Poetry dependencies (based on https://github.com/psf/black/actions/runs/816321/workflow)
      - name: Get poetry cache directory path
        id: poetry-cache-dir-path
        run: echo "::set-output name=dir::$(poetry config cache-dir)"
      - uses: actions/cache@v2
        id: poetry-cache # use this to check for `cache-hit` (`steps.poetry-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.poetry-cache-dir-path.outputs.dir }}
          key: poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{ matrix.python-version }}
          restore-keys: poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Poetry dependencies
        run: poetry install
      # POETRY:END #
      - uses: pre-commit/action@v2.0.0

  pytest:
    runs-on: ubuntu-latest
    env:
      TEST_WASM_PATH: "${{ github.workspace }}/wasm"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      # POETRY:START #
      # TODO make this DRY once composite run actions support steps with uses (https://github.com/actions/runner/issues/646)
      - name: Install poetry
        run: python -m pip install --upgrade pip poetry
      # Install Poetry dependencies (based on https://github.com/psf/black/actions/runs/816321/workflow)
      - name: Get poetry cache directory path
        id: poetry-cache-dir-path
        run: echo "::set-output name=dir::$(poetry config cache-dir)"
      - uses: actions/cache@v2
        id: poetry-cache # use this to check for `cache-hit` (`steps.poetry-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.poetry-cache-dir-path.outputs.dir }}
          key: poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{ matrix.python-version }}
          restore-keys: poetry-${{ hashFiles('**/poetry.lock') }}-${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Poetry dependencies
        run: poetry install
      # POETRY:END #
      - name: Fetch latest wasm-spec-abstypes interpreter
        run: |
          set -x
          wasm_binary_url=$(curl --silent "https://api.github.com/repos/awendland/webassembly-spec-abstypes/releases/latest" \
            | python -c 'import json, sys; b = json.loads(sys.stdin.read()); print([a for a in b["assets"] if "Linux" in a["name"]][0]["browser_download_url"])')
          curl -L "$wasm_binary_url" -o "$TEST_WASM_PATH"
          chmod a+x "$TEST_WASM_PATH"
      - name: Run pytest
        run: |
          python -m poetry run pytest -v --color=yes
